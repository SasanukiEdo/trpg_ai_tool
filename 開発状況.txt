## 開発環境
OS：Windows11
開発言語：Python 3.10.6
開発ツール：Visual Studio Code



## 実装済みの仕様

当初の目標を含め、現在までに以下の機能が実装されています。

*   APIキー管理（OS資格情報ストア利用）
*   プロジェクト管理機能
    *   プロジェクト選択、新規作成、削除、設定変更
    *   グローバル設定とプロジェクト固有設定の分離・管理
*   プロジェクト単位のデータ管理基盤
    *   チャット形式への移行 (GeminiChatHandler の導入)
    *   純粋な会話履歴のプロジェクトごとのファイル保存・読み込み機能
    *   会話履歴の画面表示（起動時、プロジェクト切替時、新規メッセージ時）
    *   会話履歴の編集・削除機能 (HTMLリンク方式)
    *   AIへの送信履歴範囲のユーザー設定機能 (スライダーUI)
    *   サブプロンプト管理（参照先タグ対応）
    *   ゲームデータ（カテゴリ別アイテム）管理（参照先タグ対応）
*   サブプロンプト機能
    *   モデルの空白選択（プロジェクト設定モデル使用）
    *   利用可能モデルリストの`config.json`での一元管理
*   データアイテム詳細表示・編集機能 (`DetailWindow`)
    *   AIによる説明/メモ編集支援機能 (`AIAssistedEditDialog`)
    *   AI支援による履歴追記機能
    *   履歴の表示改善（通し番号、区切り線、タイムスタンプ非表示）
    *   履歴の削除・編集機能
    *   画像プレビュー表示（プロジェクト内相対パス管理、初回表示安定化、リサイズ追従）
*   AIプロンプト構築の強化:
    *   タグによる関連データアイテム情報の自動組み込み
*   基本的なUI操作（カテゴリ追加、アイテム追加など）
*   主要モジュール・クラスへのDocstrings整備完了


## 未実装の仕様・今後の課題

現時点で実装されていない、または改善の余地がある項目です。
*   **アイテムデータのAI編集機能への会話履歴情報組み込み**:
    *   DetailWindow で「説明/メモ」をAI編集支援する際に、現在のチャットの会話履歴の一部もコンテキストとしてAIに渡し、より文脈に合った提案を生成できるようにする。
*   **NPCの「秘密」機能の実装**:
    *   NPCデータ構造への「秘密」情報追加。
    *   `DetailWindow` へのGM専用「秘密」編集UI追加。
    *   AIプロンプトへの「秘密」情報組み込みと、それに基づいたNPCの行動・発言生成。
*   **タグ機能のさらなる強化**:
    *   タグ検索時のAND検索/OR検索の選択UI。
    *   プロンプトに含めるタグ関連情報の種類・件数のユーザー設定機能。
    *   タグ自体の管理機能（タグクラウド表示、タグのリネーム・結合など）。
*   **AI連携の強化**:
    *   AIによる履歴以外のデータ項目更新支援（例: タグの提案、ステータス変化の反映など）。
    *   より高度なNPCとの対話生成（性格、感情、記憶の動的反映）。
    *   プロンプトテンプレートのユーザーカスタマイズ機能。
*   **データ管理機能の強化**:
    *   カテゴリの削除・リネーム機能。（優先度低）
    *   アイテムリストの検索・フィルタリング。
*   **他のAIモデルへの対応**:
    *   Claude、ChatGPTなどのAPIサポート。
    *   共通APIインターフェースの設計・実装。
*   **UI/UX改善**:
    *   `DetailWindow` の画像背景表示モードと通常表示モードの切り替え機能。→実装を試みたが困難であるため見送り
    *   UIデザイン全体の洗練、アイコンの統一、より直感的な操作性。
    *   より親切なエラーメッセージやツールチップ、ユーザーガイドの整備。
*   **安定性と堅牢性の向上**:
    *   さらなるエッジケースのテストとエラーハンドリング強化。
    *   パフォーマンスの最適化。


---


## データ管理機能の仕様
JSONファイルで管理。
ファイルはカテゴリごとに分ける。キャラクターだけではなく、アイテムやクエストの情報など、様々な管理に使えるよう汎用性を持たせたいと思っています。
【管理項目】
- カテゴリ
- 固定情報：キャラクターのステータスやアイテムの性能、クエストの依頼内容など、固定情報を記録します。
- 履歴情報：キャラクターの思い出や、クエストの進捗情報など、順次追加されていく情報を記録します。
- タグ：タグ付けをすることで、ほかの関連情報と連動できるようにします。タグは区切り文字を使って複数登録できるようにします。
- 画像：画像ファイルを指定することで、キャラクター画像をUIの背景などに表示できるようにします。
【AIとの連携について】
- 選択した情報と、タグ付けされた関連情報をプロンプトに含める。
- AIに固定情報や追加情報を更新してもらう機能を付ける。
  - 固定情報の場合：今登録されている情報に合わせて、現在の情報をまとめなおし、情報を更新してもらう。キャラクターステータスの更新などに利用したい。
  - 履歴情報の場合：今登録されている情報に追加する形で、情報を更新してもらう。

